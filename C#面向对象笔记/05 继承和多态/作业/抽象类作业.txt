1.编写一个程序，以实现机器人的层次结构，此层次结构将至少包含抽象类机器人类Robot、炒菜机器人类CookRobot、传菜机器人类DeliveryRobot。
Robot类应包含机器人姓名name字段、机器人工作的方法Working()，该方法应该在子类中被实现，机器人工作的方式很多，所以Working()方法应该被定义为抽象方法。

可以在CookRobot中添加一个代表菜的类型的字段，用枚举类型；在DeliveryRobot中添加一个代表连续工作时长的字段hours。
CookRobot和DeliveryRobot应实现具体的Working()方法。

在主类中定义一个方法，形参数据类型是string，返回值数据类型是Robot，方法中实现如果传入的字符串是“炒菜”，那就返回CookRobot的实例（当然是要用Robot的引用指向的），如果传入的字符串是“传菜”，那就返回DeliveryRobot的实例。

Main方法中：用户输入所选择的机器人的功能，根据用户的输入Robot执行对应的功能。


2.使用抽象类结构实现游戏中NPC 模块

在游戏中会出现很多种不同用途的 NPC，这些 NPC 有各自的存在的价值和作用，同时又具备一些共性的东西。
在开发 NPC 系统的时候，往往是需要提取共性，独立出一个父类，然后子类继承实现不同作用的 NPC。

分析：任务 NPC，商贩 NPC，铁匠 NPC，三种 NPC 的种类。

共有属性：npc 的名字，npc 的类型；

共有方法：都能和玩家交互(交谈)；

不同类型的 NPC 实现自己的行为(可以定义为抽象方法)
1）任务NPC下达任务
2）商贩NPC出售物品
3）铁匠NPC可以修理装备




































